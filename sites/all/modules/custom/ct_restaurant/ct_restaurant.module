<?php
function ct_restaurant_menu() {
  $items = array();
  $items['restaurant/customer/search'] = array(
    'title' => 'Search Customer',
    'page callback' => 'ct_restaurant_orderinfo',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );
  $items['admin/restaurantConfig'] = array(
    'title' => '下单后跳转',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ct_restaurant_config_form'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer site'),
    'menu_name' => 'menu-restaurantadmin',
    'weight' => 10
  );
  return $items;
}

function ct_restaurant_config_form() {
  $form['ordered_url_redirect'] = array(
    '#required' => TRUE,
    '#type' => 'textfield',
    '#title' => t("下单后跳转地址"),
    '#default_value' => variable_get("ordered_url_redirect", "<front>")
  );
  return system_settings_form($form);
}
function ct_restaurant_search_customer_by_phone() {
  if (isset($_REQUEST['phone']) && !empty($_REQUEST['phone']) && ct_restaurant_validate_phone($_REQUEST['phone'])) {
    $query = new EntityFieldQuery();
    $entities = $query->entityCondition('entity_type', 'node')
    ->propertyCondition('type', 'ct_ordering_customer')
    ->propertyCondition('status', 0)
    ->fieldCondition('field_customer_phone', 'value', $_REQUEST['phone'], '=')
    ->range(0, 1)
    ->execute();

    foreach ($entities['node'] as $key => $value) {
      $node = node_load($key);
      break;
    }
    $node->field_customer_address['und'][0]['value'];
    drupal_json_output(array("name" => $node->title, "adress" => $node->field_customer_address['und'][0]['value']));//return name and address
    exit;
  } 
  else {
    drupal_json_output(array("msg" => t('Invalidate phone number')));
  }
}
function ct_restaurant_block_info() {
  $blocks['ct_restaurant_order_form'] = array(
    'info' => t('送餐信息表单区块'),
    'status' => TRUE,
    'region' => 'sidebar_first',  
    'visibility' => BLOCK_VISIBILITY_LISTED,  
    'pages' => 'node/*',
  );

  return $blocks;
}

function ct_restaurant_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'ct_restaurant_order_form':
      $block['subject'] = t('填写送餐信息');
      $block['content'] = drupal_get_form('ct_restaurant_order_form');
      break;
  }
  return $block;
}
function ct_restaurant_order_form($form, &$form_state) {
  drupal_add_js(drupal_get_path("module", "ct_restaurant") . '/jquery.cookie.js', array('type' => 'file', 'scope' => 'footer'));
  $form['description'] = array(
    '#type' => 'item',
    '#title' => t('为保证您的餐点能够快速送达，请认真填写以下送餐信息，:D'),
  );
  $form['name'] = array(
    '#required' => TRUE,
    '#type' => 'textfield',
    '#title' => t("姓名/称谓"),
  );
  $form['phone'] = array(
    '#required' => TRUE,
    '#type' => 'textfield',
    '#title' => t("联系电话"),
  );
  $form['address'] = array(
    '#required' => TRUE,
    '#type' => 'textfield',
    '#title' => t("送餐地址"),
  );
  $form['notes'] = array(
    '#type' => 'textarea',
    '#title' => t("说明"),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t("确认订餐"),
  );
  return $form;
}


function ct_restaurant_order_form_validate($form, &$form_state) {
  if (!isset($_COOKIE["order_info"]) && empty($_COOKIE["order_info"])) {

    form_set_error('', t('貌似你没有订餐，或者您的浏览器禁用了cookie，...o(╯□╰)o...'));
  }
  if (!ct_restaurant_validate_phone($form_state['values']['phone'])) {
    form_set_error('phone', t('似乎不是正确的电话号码。。。'));
  }
}


function ct_restaurant_order_form_submit($form, &$form_state) {
  //订单相关
  $notes = $form_state['values']['notes'];

  //客户相关
  $address = $form_state['values']['address'];
  $phone = $form_state['values']['phone'];
  $name = $form_state['values']['name'];

  /*
   * 语言为中立
   * 姓名/称谓;电话;送餐地址
   */
  $node_customer = new stdClass();
  $node_customer->type = 'ct_ordering_customer';
  $node_customer->language = 'und';
  $node_customer->status = 0;
  $node_customer->uid = 1;
  $node_customer->promote = 0;
  $node_customer->sticky = 0;
  $node_customer->format = 2;
  $node_customer->title = $name;
  $node_customer->field_customer_address['und'][0]['value'] = $address;
  $node_customer->body['und'][0]['value'] = $notes;
  $node_customer->field_customer_phone['und'][0]['value'] = $phone;
  $node_customer->status = 1;
  node_save($node_customer);
  $node_customer = NULL;


  /*
   * 语言为中立
   * 客户信息，存在字段中，用冗余免去查询;美食与分量，备注，用body存储;订单号，存在title字段中;总应付款
   */
  $node_order = new stdClass();
  $node_order->type = 'ct_ordering_order';

  $node_order->language = 'und';
  $node_order->status = 0;
  $node_order->uid = 1;
  $node_order->promote = 0;
  $node_order->sticky = 0;
  $node_order->format = 2;
  //订单号
  $node_order->title = ct_restaurant_generate_order_number();
  list($order_total_price, $orderinfo) = ct_restaurant_orderinfo($_COOKIE["order_info"]);
  $node_order->field_order_customerinfo['und'][0]['value'] = sprintf("%s\r\n%s\r\n%s", $name, $address, $phone);
  $node_order->field_order_price['und'][0]['value'] = $order_total_price;
  $node_order->body['und'][0]['value'] = sprintf("%s\r\n%s\r\n%s", format_date(time(), 'custom', "Y-m-d H:i:s"), $orderinfo, $notes);
  $node_order->status = 1;
  node_save($node_order);

  $node_order = NULL;
  setcookie("order_info", NULL, mktime()-3600, "/");
  drupal_goto(variable_get("ordered_url_redirect", "<front>"));
}



function ct_restaurant_generate_order_number() {
  return date('YmdHis', time());
}


function ct_restaurant_orderinfo($orderinfo_in_cookie) {

  $orderinfo = ""; $order_total_price="0.0";
  $order_item_quantity_arr = drupal_json_decode($orderinfo_in_cookie);
  
  foreach ($order_item_quantity_arr as $value) {
    $item_id = $value['FoodID'];
    $quantity = $value['Num'];
    $item_node = node_load($item_id);
    $item_title = $item_node->title;
    $item_total_price = $item_node->field_food_price['und'][0]['value'] * $quantity;
    $order_total_price += $item_total_price;
    $orderinfo .= sprintf("%s%d份(%.2f元)\r\n", $item_title, $quantity, $item_total_price);
  }
  
  return array($order_total_price, $orderinfo);
  
}

function ct_restaurant_validate_phone($phone) {
  $regex = "/^13[0-9]{9}|15[0|1|2|3|5|6|7|8|9]\d{8}|18[0|5|6|7|8|9]\d{8}|\d{3}-\d{8}|\d{11}|\d{4}-\d{7}$/";
  return preg_match($regex, $phone);
}
